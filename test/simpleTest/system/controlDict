/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

//application     rhoPimpleFoam;
application     psjFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         10e-6;

deltaT          5e-9;

writeControl    adjustable;

writeInterval   $deltaT;//1e-7;//$deltaT;

purgeWrite      0;

writeFormat     binary;

writePrecision   11;

writeCompression off;

timeFormat      general;

timePrecision   9;

runTimeModifiable true;

//adjustTimeStep    yes;

//maxCo           0.5;

functions
{
    //#includeFunc MachNo
    #includeFunc solverInfo
    //#includeFunc calcB
    //#includeFunc wallShearStress
  
    meanSourceterm
    {
        // Mandatory entries (unmodifiable)
        type            volFieldValue;
        libs            (fieldFunctionObjects);

        // Mandatory entries (runtime modifiable)
        fields          ( source );
        operation       volAverage;
        regionType      cellZone;
        name            interElectrodZone;

        // Optional entries (runtime modifiable)
        postOperation   none;
        //weightField     alpha1;

        // Optional (inherited) entries
        writeFields     false;
        scalingFactor   1.0;
        writePrecision  8;
        writeToFile     true;
        //useUserTime     true;
        //region          region0;
        enabled         true;
        log             true;
        timeStart       0;
        timeEnd         1000;
        //executeControl  timeStep;
        //executeInterval 1;
        writeControl    timeStep;
        writeInterval   1;
    }
}

OptimisationSwitches
{
    // Trap floating point exception.
    // Can override with FOAM_SIGFPE env variable (true|false)
    trapFpe         true;

    // Initialization malloced memory to NaN.
    // Can override with FOAM_SETNAN env variable (true|false)
    setNaN          0;

    // Force dumping (at next timestep) upon signal (-1 to disable)
    // See 'kill -l' for signal numbers (eg, 10=USR1, 12=USR2)
    writeNowSignal          -1; // 10;

    // Force dumping (at next timestep) upon signal (-1 to disable) and exit
    stopAtWriteNowSignal    -1;

    //- Use dlclose() when clearing the dlLibraryTable.

}

/*DebugSwitches
{
    fluidThermo 1;
    psiThermo   1;
    basicMixture 1;

    cell        1;
    cellList    1;
    cellLooper  1;

    constant    1;

    dictionary  1;
    
    empty       1;

    exponential 1;
    general     1;
    generic     1;
    meshObject  0;
    none        1;
    obj         0;
    objectRegistry 0;
    patch       0;
    pefectInterface 1;
    powerLaw    1;
    pureMixture<myconstTransport<thermo<myhConstThermo<myperfectGas>>>> 0; //not working
    raw         1;
    regIOobject 0;
    scalarField 0;
    stl         1;
    surfaceScalarField 0;
    surfaceScalarField::Internal 1;
    surfaces    1;
    time        1;
    totalPressure 1;
    totalTemperature 1;
    value       1;
    volScalarField 0;
    volScalarField::Internal 1;
    volumeExpr  1;
    waveTransmissive 1;
    zeroGradient 1;
}*/


libs (
"libDAngolafluidThermophysicalModels.so"
);
// ************************************************************************* //
